---
import MainLayout from "../../layouts/Main.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import BookingBanner from "../../components/BookingBanner.astro";
import i18next, { t, changeLanguage } from "i18next";
const lang = i18next.language;
const base = lang === "it" ? "" : `/${lang}`;
import { getImage } from "astro:assets";
import myBackground from "../../assets/img/117_castagneto.jpg";
const optimizedBackground = await getImage({ src: myBackground, format: "webp" });
import { Image } from "astro:assets";
import img1 from "../../assets/img/112_castagneto.jpg";
import img2 from "../../assets/img/117_castagneto.jpg";
import img3 from "../../assets/img/2149563981.jpg";
import img4 from "../../assets/img/cavallino-matto.jpg";
import img5 from "../../assets/img/cerreta.jpg";
import img6 from "../../assets/img/app/image00006.jpeg";

changeLanguage("en");

-- -
    <MainLayout>title;
"Il Territorio - Agriturismo La Rondine Bolgheri" >
    <Header>/>
    < section;
class {
}
"hero relative z-[1] py-16 lg:py-28 px-0 bg-gray-100 bg-cover bg-no-repeat bg-center text-center";
style = {} `background-image: url(${optimizedBackground.src});`;
 >
    <div>class {
    };
"w-[calc(100%_-_3rem)] mx-auto max-w-lg sm:max-w-3xl" >
    <div>class {
    };
"text-sm text-primary mb-3" > { t(); } < /div>
    < h1;
class {
}
"text-4xl lg:text-6xl text-secondary font-extrabold mb-2" > { t(); } < /h1>
    < div;
class {
}
"flex flex-wrap items-center gap-4 justify-center" >
    <>/div>
    < /div>
    < /section>
    < div;
class {
}
"bg-secondary py-6 sm:py-8 lg:py-12" >
    <div>class {
    };
"mx-auto max-w-screen-xl px-4 md:px-8" >
    <div>class {
    };
"grid gap-8 md:grid-cols-2 lg:gap-12" >
    <div><div>class {
    };
"h-64 overflow-hidden rounded-lg bg-gray-100 shadow-lg md:h-auto" >
    <Image>src;
{
    img1;
}
loading = "lazy";
alt = "Photo by Martin Sanchez";
class {
}
"h-full w-full object-cover object-center" /  >
    <>/div>
    < /div>
    < div;
class {
}
"md:pt-8" >
    <h1>class {
    };
"mb-4 text-center text-2xl font-extrabold text-primary sm:text-3xl md:mb-6 md:text-left" > { t(); } < /h1>
    < p;
class {
}
"mb-6 text-gray-500 sm:text-lg md:mb-8" > { t(); } < /p>
    < p;
class {
}
"mb-6 text-gray-500 sm:text-lg md:mb-8" > { t(); } < /p>
    < p;
class {
}
"mb-6 text-gray-500 sm:text-lg md:mb-8" > { t(); } < /p>
    < /div>
    < /div>
    < /div>
    < /div>
    < BookingBanner /  >
    <div>class {
    };
"tab-features js-tabs bg-secondary py-16 lg:py-28 px-12";
data - show - panel - class {
};
"tab-features__panel--display";
data - hide - panel - class {
};
"tab-features__panel--hide" >
    <ul>class {
    };
"tab-features__controls-list relative flex items-center overflow-auto after:content-[''] after:absolute after:left-0 after:bottom-0 after:w-full after:h-px after:bg-gray-900/10 js-tabs__controls";
aria - label;
"Tabs Interface" >
    <li>class {
    };
"tab-features__control-wrapper" >
    <a>href;
"#tab-features-mil";
class {
}
"tab-features__control relative block py-3 lg:py-5 pr-12 lg:pr-20 pl-3 lg:pl-5 text-primary no-underline font-medium transition-[background] duration-200 before:text-xs before:block before:mb-0.5 before:lg:mb-1 after:content-[''] after:absolute after:bottom-0 after:left-0 after:w-full after:h-px hover:bg-gray-900/[.025]";
aria - selected;
"true" > { t(); } < /a>
    < /li>
    < li;
class {
}
"tab-features__control-wrapper" >
    <a>href;
"#tab-features-flo";
class {
}
"tab-features__control relative block py-3 lg:py-5 pr-12 lg:pr-20 pl-3 lg:pl-5 text-primary no-underline font-medium transition-[background] duration-200 before:text-xs before:block before:mb-0.5 before:lg:mb-1 after:content-[''] after:absolute after:bottom-0 after:left-0 after:w-full after:h-px hover:bg-gray-900/[.025]" > { t(); } < /a>
    < /li>
    < li;
class {
}
"tab-features__control-wrapper" >
    <a>href;
"#tab-features-rom";
class {
}
"tab-features__control relative block py-3 lg:py-5 pr-12 lg:pr-20 pl-3 lg:pl-5 text-primary no-underline font-medium transition-[background] duration-200 before:text-xs before:block before:mb-0.5 before:lg:mb-1 after:content-[''] after:absolute after:bottom-0 after:left-0 after:w-full after:h-px hover:bg-gray-900/[.025]" > { t(); } < /a>
    < /li>
    < li;
class {
}
"tab-features__control-wrapper" >
    <a>href;
"#tab-features-nap";
class {
}
"tab-features__control relative block py-3 lg:py-5 pr-12 lg:pr-20 pl-3 lg:pl-5 text-primary no-underline font-medium transition-[background] duration-200 before:text-xs before:block before:mb-0.5 before:lg:mb-1 after:content-[''] after:absolute after:bottom-0 after:left-0 after:w-full after:h-px hover:bg-gray-900/[.025]" > { t(); } < /a>
    < /li>
    < /ul>
    < div;
class {
}
"relative js-tabs__panels" >
    <section>id;
"tab-features-mil";
class {
}
"tab-features__panel pt-5 lg:pt-8 js-tabs__panel" >
    <figure><Image>class {
    };
"block w-full lg:w-3/4 rounded-lg";
src = { img2 };
alt = "Image description" >
    <>/figure>
    < p;
class {
}
"mt-4" > { t(); } < /p>
    < /section>
    < section;
id = "tab-features-flo";
class {
}
"tab-features__panel pt-5 lg:pt-8 js-tabs__panel" >
    <figure><Image>class {
    };
"block w-full lg:w-3/4 rounded-lg";
src = { img3 };
alt = "Image description" >
    <>/figure>
    < p;
class {
}
"mt-4" > { t(); } < /p>
    < /section>
    < section;
id = "tab-features-rom";
class {
}
"tab-features__panel pt-5 lg:pt-8 js-tabs__panel" >
    <figure><Image>class {
    };
"block w-full lg:w-3/4 rounded-lg";
src = { img4 };
alt = "Image description" >
    <>/figure>
    < p;
class {
}
"mt-4" > { t(); } < /p>
    < /section>
    < section;
id = "tab-features-nap";
class {
}
"tab-features__panel pt-5 lg:pt-8 js-tabs__panel" >
    <figure><Image>class {
    };
"block  w-full lg:w-3/4 rounded-lg";
src = { img5 };
alt = "Image description" >
    <>/figure>
    < p;
class {
}
"mt-4" > { t(); } < /p>
    < /section>
    < /div>
    < /div>
    < Footer /  >
    <>/MainLayout><style>;
--- */
.tab-features__controls-list {
  counter-reset: tab-features-list;
}

.tab-features__control-wrapper {
  counter-increment: tab-features-list;
}

.tab-features__control::before {
  --tw-content: "0" counter(tab-features-list);
  color: #246b0e;
}

.tab-features__control[aria-selected=true]::before {
  color: #cab638;
}
.tab-features__control[aria-selected=true]::after {
  background-color: #cab638
}

.tab-features__panel {
  opacity: 0;
}

.tabs--no-interaction .tab-features__panel {
  animation-duration: 0s;
  animation-delay: 0s;
}

.tab-features__panel--display {
  opacity: 0;
  animation: tab-features-panel-entry-anim 0.5s 0.2s cubic-bezier(0.215, 0.61, 0.355, 1) forwards;
}

.tab-features__panel--hide {
  position: absolute;
  visibility: hidden;
  top: 0;
  width: 100%;
  transition: position 0s 0.5s, visibility 0s 0.5s;
  animation: tab-features-panel-exit-anim 0.5s cubic-bezier(0.215, 0.61, 0.355, 1);
}

@keyframes tab-features-panel-entry-anim {
  0% {
    opacity: 0;
    transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes tab-features-panel-exit-anim {
  0% {
    opacity: 1;
    transform: translateY(0px);
  }
  100% {
    opacity: 0;
    transform: translateY(20px);
  }
}
</style>

<script is:inline>
  if(!Util) function Util () {};

Util.addClass = function(el, className) {
  var classList = className.split(' ');
  el.classList.add(classList[0]);
  if (classList.length > 1) Util.addClass(el, classList.slice(1).join(' '));
};

Util.removeClass = function(el, className) {
  var classList = className.split(' ');
  el.classList.remove(classList[0]);
  if (classList.length > 1) Util.removeClass(el, classList.slice(1).join(' '));
};

Util.addClass = function(el, className) {
  var classList = className.split(' ');
  el.classList.add(classList[0]);
  if (classList.length > 1) Util.addClass(el, classList.slice(1).join(' '));
};

Util.toggleClass = function(el, className, bool) {
  if(bool) Util.addClass(el, className);
  else Util.removeClass(el, className);
};

Util.setAttributes = function(el, attrs) {
  for(var key in attrs) {
    el.setAttribute(key, attrs[key]);
  }
};

Util.hasClass = function(el, className) {
  return el.classList.contains(className);
};

Util.getChildrenByClassName = function(el, className) {
  var children = el.children,
    childrenByClass = [];
  for (var i = 0; i < children.length; i++) {
    if (Util.hasClass(children[i], className)) childrenByClass.push(children[i]);
  }
  return childrenByClass;
};

Util.getIndexInArray = function(array, el) {
  return Array.prototype.indexOf.call(array, el);
};


// File#: _1_tabs
// Usage: codyhouse.co/license
(function() {
	var Tab = function(element) {
		this.element = element;
		this.tabList = this.element.getElementsByClassName('js-tabs__controls')[0];
		this.listItems = this.tabList.getElementsByTagName('li');
		this.triggers = this.tabList.getElementsByTagName('a');
		this.panelsList = this.element.getElementsByClassName('js-tabs__panels')[0];
		this.panels = Util.getChildrenByClassName(this.panelsList, 'js-tabs__panel');
		this.hideClass = this.element.getAttribute('data-hide-panel-class') ? this.element.getAttribute('data-hide-panel-class') : 'hidden';
		this.customShowClass = this.element.getAttribute('data-show-panel-class') ? this.element.getAttribute('data-show-panel-class') : false;
		this.layout = this.element.getAttribute('data-tabs-layout') ? this.element.getAttribute('data-tabs-layout') : 'horizontal';
		// deep linking options
		this.deepLinkOn = this.element.getAttribute('data-deep-link') == 'on';
		// init tabs
		this.initTab();
	};

	Tab.prototype.initTab = function() {
		//set initial aria attributes
		this.tabList.setAttribute('role', 'tablist');
		Util.addClass(this.element, 'tabs--no-interaction');

		for( var i = 0; i < this.triggers.length; i++) {
			var bool = (i == 0),
				panelId = this.panels[i].getAttribute('id');
			this.listItems[i].setAttribute('role', 'presentation');
			Util.setAttributes(this.triggers[i], {'role': 'tab', 'aria-selected': bool, 'aria-controls': panelId, 'id': 'tab-'+panelId});
			Util.addClass(this.triggers[i], 'js-tabs__trigger'); 
			Util.setAttributes(this.panels[i], {'role': 'tabpanel', 'aria-labelledby': 'tab-'+panelId});
			Util.toggleClass(this.panels[i], this.hideClass, !bool);
			if(bool && this.customShowClass) Util.addClass(this.panels[i], this.customShowClass);

			if(!bool) this.triggers[i].setAttribute('tabindex', '-1'); 
		}

		//listen for Tab events
		this.initTabEvents();

		// check deep linking option
		this.initDeepLink();
	};

	Tab.prototype.initTabEvents = function() {
		var self = this;
		//click on a new tab -> select content
		this.tabList.addEventListener('click', function(event) {
			if( event.target.closest('.js-tabs__trigger') ) self.triggerTab(event.target.closest('.js-tabs__trigger'), event);
		});
		//arrow keys to navigate through tabs 
		this.tabList.addEventListener('keydown', function(event) {
			;
			if( !event.target.closest('.js-tabs__trigger') ) return;
			if( tabNavigateNext(event, self.layout) ) {
				event.preventDefault();
				self.selectNewTab('next');
			} else if( tabNavigatePrev(event, self.layout) ) {
				event.preventDefault();
				self.selectNewTab('prev');
			}
		});
	};

	Tab.prototype.selectNewTab = function(direction) {
		var selectedTab = this.tabList.querySelector('[aria-selected="true"]'),
			index = Util.getIndexInArray(this.triggers, selectedTab);
		index = (direction == 'next') ? index + 1 : index - 1;
		//make sure index is in the correct interval 
		//-> from last element go to first using the right arrow, from first element go to last using the left arrow
		if(index < 0) index = this.listItems.length - 1;
		if(index >= this.listItems.length) index = 0;	
		this.triggerTab(this.triggers[index]);
		this.triggers[index].focus();
	};

	Tab.prototype.triggerTab = function(tabTrigger, event) {
		var self = this;
		event && event.preventDefault();	
		var index = Util.getIndexInArray(this.triggers, tabTrigger);
		//no need to do anything if tab was already selected
		if(this.triggers[index].getAttribute('aria-selected') == 'true') return;

		Util.removeClass(this.element, 'tabs--no-interaction');
		
		for( var i = 0; i < this.triggers.length; i++) {
			var bool = (i == index);
			Util.toggleClass(this.panels[i], this.hideClass, !bool);
			if(this.customShowClass) Util.toggleClass(this.panels[i], this.customShowClass, bool);
			this.triggers[i].setAttribute('aria-selected', bool);
			bool ? this.triggers[i].setAttribute('tabindex', '0') : this.triggers[i].setAttribute('tabindex', '-1');
		}

		// update url if deepLink is on
		if(this.deepLinkOn) {
			history.replaceState(null, '', '#'+tabTrigger.getAttribute('aria-controls'));
		}
	};

	Tab.prototype.initDeepLink = function() {
		if(!this.deepLinkOn) return;
		var hash = window.location.hash.substr(1);
		var self = this;
		if(!hash || hash == '') return;
		for(var i = 0; i < this.panels.length; i++) {
			if(this.panels[i].getAttribute('id') == hash) {
				this.triggerTab(this.triggers[i], false);
				setTimeout(function(){self.panels[i].scrollIntoView(true);});
				break;
			}
		};
	};

	function tabNavigateNext(event, layout) {
		if(layout == 'horizontal' && (event.keyCode && event.keyCode == 39 || event.key && event.key == 'ArrowRight')) {return true;}
		else if(layout == 'vertical' && (event.keyCode && event.keyCode == 40 || event.key && event.key == 'ArrowDown')) {return true;}
		else {return false;}
	};

	function tabNavigatePrev(event, layout) {
		if(layout == 'horizontal' && (event.keyCode && event.keyCode == 37 || event.key && event.key == 'ArrowLeft')) {return true;}
		else if(layout == 'vertical' && (event.keyCode && event.keyCode == 38 || event.key && event.key == 'ArrowUp')) {return true;}
		else {return false;}
	};

	window.Tab = Tab;
	
	//initialize the Tab objects
	var tabs = document.getElementsByClassName('js-tabs');
	if( tabs.length > 0 ) {
		for( var i = 0; i < tabs.length; i++) {
			(function(i){new Tab(tabs[i]);})(i);
		}
	}
}());
</script>